Редактор прайс-листов

http://localhost/zoonmenu/index.php?owner_id=1

- Вступление
На Zoon.ru есть личный кабинет для владельцев бизнесов (ресторанов и салонов), оттуда они могут, в частности, загрузить прайс-лист своей организации (или - в случае ресторана - меню; далее под словами "меню" и "прайс-лист" мы понимаем одно и то же).
У разных организаций разные меню, id организации задаётся в параметре "owner_id". Меню плоское, без категорий, и является просто списком пунктов меню. Для каждого пункта меню задаётся название, цена и фото.

Вам предстоит сделать серверную часть для упрощенной версии этого редактора
В файле ajax.php - заглушка для серверной части, которую вам и нужно реализовать. Id организации в него уже пробрасывается. Остальные файлы (index.php и js/) изменять не нужно.
Ajax.php вы можете полностью удалить и переписать с использованием любых фреймворков и библиотек, но предпочтительно или не включать код фреймворка в результат, или по крайней мере делать это в раздельных коммитах.
Обратите внимание - в редакторе есть возможность копипаста (как в Excel).

- Часть 1
При нажатии на "сохранить" меню должно сохраняться,
при открытии страницы с тем же owner_id должно показываться сохранённое
ранее меню (если оно есть), либо пустое меню.
В поле "Фото" можно ввести только URL фотографии, кнопка "загрузить" работать не должна.
Название пункта меню - уникально
Все ссылки на фото - правильного формата и размера, т.е. проверять их и ресайзить не нужно

* Создание объекта "пункт меню" (оно же "строка прайс-листа", "блюдо из меню")
следует считать дорогой операцией, т.е. мы не можем при сохранении взять,
сё удалить и загрузить заново, более того: мы не должны пересоздавать пункт меню,
 если у него изменилась цена или фото.


- Часть 2 - то же, что в части 1, плюс:
В поле "Фото" можно ввести или URL фотографии, или загрузить файл.
Все загружаемые файлы - правильного формата и размера, т.е. проверять их и ресайзить не нужно
Неиспользуемые фото должны быть удалены.
Копипаст в редакторе должен корректно работать в т.ч. с фотографиями загруженными в виде файла.

* Если несколько пунктов меню используют одно и то же фото, желательно не копировать файл много раз
* Суммарно пунктов меню с фото во всех организациях - очень много. Т.е. получить без привязки к организации список всех пунктов меню, всех загруженных фотографий или всех файлов фоток на диске - долгая операция.
* При работе с файлами фоток желательно использовать только операции вида "положить файл", "скопировать файл" и "удалить файл" (т.е. не использовать "получить список файлов")

Сценарий, поясняющий требования 2ой части:
1. Я добавил 1 пункт меню и загрузил файл с фото, не нажимая на сохранение (в базе 0 пунктов меню, на диске 1 файл)
2. Я скопировал этот пункт (включая фото), вставил в конец, отредактировал название, сохранил (2 пункта меню в базе, 1 файл на диске)
3. Я удалил фото в первом пункте меню с помощью нажатия на del в ячейке, загрузил другой файл с фото, сохранил (2 пункта меню в базе, 2 файла на диске)
4. Я удалил фото в первом пункте меню с помощью нажатия на del в ячейке, сохранил (2 пункта меню в базе, 1 файл на диске)



Критерии:
- качество кода (понятность, логичность, организация)
- скорость работы (количество и сложность запросов, кол-во обращений к файлам фоток)
- учёт ограничений (они со звёздочкой)

В качестве базы данных можно использовать любую распространённую БД (как реляционную, так и нет). У нас используется MongoDB.
